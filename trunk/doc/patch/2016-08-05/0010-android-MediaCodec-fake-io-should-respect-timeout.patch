From ae80ea4d9d0506f37c2433c08396362dcf020cb7 Mon Sep 17 00:00:00 2001
From: Zhang Rui <bbcallen@gmail.com>
Date: Wed, 13 Jul 2016 16:33:15 +0800
Subject: [PATCH 10/73] android/MediaCodec: fake io should respect timeout

---
 .../ijksdl_codec_android_mediacodec_dummy.c        |  2 +-
 .../ijksdl_codec_android_mediacodec_internal.c     | 53 +++++++++++++++-------
 .../ijksdl_codec_android_mediacodec_internal.h     |  1 +
 3 files changed, 38 insertions(+), 18 deletions(-)

diff --git a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_dummy.c b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_dummy.c
index 282ee3c..f4a593f 100644
--- a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_dummy.c
+++ b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_dummy.c
@@ -88,7 +88,7 @@ static ssize_t SDL_AMediaCodecDummy_writeInputData(SDL_AMediaCodec* acodec, size
 static ssize_t SDL_AMediaCodecDummy_dequeueInputBuffer(SDL_AMediaCodec* acodec, int64_t timeoutUs)
 {
     DMY_TRACE("%s", __func__);
-    return 0;
+    return SDL_AMediaCodec_FakeFifo_dequeueInputBuffer(&acodec->opaque->dummy_fifo, timeoutUs);
 }
 
 static sdl_amedia_status_t SDL_AMediaCodecDummy_queueInputBuffer(SDL_AMediaCodec* acodec, size_t idx, off_t offset, size_t size, uint64_t time, uint32_t flags)
diff --git a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.c b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.c
index 5cfbdb7..824eb3e 100644
--- a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.c
+++ b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.c
@@ -62,35 +62,54 @@ void SDL_AMediaCodec_FakeFifo_destroy(SDL_AMediaCodec_FakeFifo *fifo)
     memset(fifo, 0, sizeof(SDL_AMediaCodec_FakeFifo));
 }
 
-sdl_amedia_status_t SDL_AMediaCodec_FakeFifo_queueInputBuffer(SDL_AMediaCodec_FakeFifo *fifo, size_t idx, off_t offset, size_t size, uint64_t time, uint32_t flags)
+ssize_t SDL_AMediaCodec_FakeFifo_dequeueInputBuffer(SDL_AMediaCodec_FakeFifo* fifo, int64_t timeoutUs)
 {
+    int ret_index = -1;
     if (fifo->should_abort)
         return SDL_AMEDIA_ERROR_UNKNOWN;
 
     SDL_LockMutex(fifo->mutex);
-    while (!fifo->should_abort) {
-        if (fifo->size < FAKE_BUFFER_QUEUE_SIZE) {
-            SDL_AMediaCodec_FakeFrame *fake = &fifo->fakes[fifo->end];
-            fake->info.offset = offset;
-            fake->info.size   = size;
-            fake->info.presentationTimeUs = time;
-            fake->info.flags  = flags;
-            fake->index       = fifo->end;
-
-            FAK_TRACE("%s, %d, %lld", __func__, fifo->end, time);
-
-            fifo->end = (fifo->end + 1) % FAKE_BUFFER_QUEUE_SIZE;
-            fifo->size++;
-            SDL_CondSignal(fifo->wakeup_dequeue_cond);
-            break;
+    if (!fifo->should_abort) {
+        if (fifo->size >= FAKE_BUFFER_QUEUE_SIZE) {
+            SDL_CondWaitTimeout(fifo->wakeup_enqueue_cond, fifo->mutex, timeoutUs / 1000);
         }
 
-        SDL_CondWaitTimeout(fifo->wakeup_enqueue_cond, fifo->mutex, 1000);
+        if (fifo->size < FAKE_BUFFER_QUEUE_SIZE) {
+            ret_index = fifo->end;
+        }
     }
     SDL_UnlockMutex(fifo->mutex);
 
     if (fifo->should_abort)
+        return -1;
+
+    return ret_index;
+}
+
+sdl_amedia_status_t SDL_AMediaCodec_FakeFifo_queueInputBuffer(SDL_AMediaCodec_FakeFifo *fifo, size_t idx, off_t offset, size_t size, uint64_t time, uint32_t flags)
+{
+    if (fifo->should_abort)
+        return SDL_AMEDIA_ERROR_UNKNOWN;
+
+    SDL_LockMutex(fifo->mutex);
+    if (fifo->size >= FAKE_BUFFER_QUEUE_SIZE) {
+        SDL_UnlockMutex(fifo->mutex);
         return SDL_AMEDIA_ERROR_UNKNOWN;
+    }
+
+    SDL_AMediaCodec_FakeFrame *fake = &fifo->fakes[fifo->end];
+    fake->info.offset = offset;
+    fake->info.size   = size;
+    fake->info.presentationTimeUs = time;
+    fake->info.flags  = flags;
+    fake->index       = fifo->end;
+
+    FAK_TRACE("%s, %d, %lld", __func__, fifo->end, time);
+
+    fifo->end = (fifo->end + 1) % FAKE_BUFFER_QUEUE_SIZE;
+    fifo->size++;
+    SDL_CondSignal(fifo->wakeup_dequeue_cond);
+    SDL_UnlockMutex(fifo->mutex);
 
     return SDL_AMEDIA_OK;
 }
diff --git a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.h b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.h
index 4ae68e7..e512870 100644
--- a/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.h
+++ b/ijkmedia/ijksdl/android/ijksdl_codec_android_mediacodec_internal.h
@@ -51,6 +51,7 @@ typedef struct SDL_AMediaCodec_FakeFifo {
 sdl_amedia_status_t SDL_AMediaCodec_FakeFifo_init(SDL_AMediaCodec_FakeFifo *fifo);
 void                SDL_AMediaCodec_FakeFifo_abort(SDL_AMediaCodec_FakeFifo *fifo);
 void                SDL_AMediaCodec_FakeFifo_destroy(SDL_AMediaCodec_FakeFifo *fifo);
+ssize_t             SDL_AMediaCodec_FakeFifo_dequeueInputBuffer(SDL_AMediaCodec_FakeFifo* fifo, int64_t timeoutUs);
 sdl_amedia_status_t SDL_AMediaCodec_FakeFifo_queueInputBuffer(SDL_AMediaCodec_FakeFifo *fifo, size_t idx, off_t offset, size_t size, uint64_t time, uint32_t flags);
 ssize_t             SDL_AMediaCodec_FakeFifo_dequeueOutputBuffer(SDL_AMediaCodec_FakeFifo *fifo, SDL_AMediaCodecBufferInfo *info, int64_t timeoutUs);
 void                SDL_AMediaCodec_FakeFifo_flush(SDL_AMediaCodec_FakeFifo *fifo);
-- 
1.9.1

